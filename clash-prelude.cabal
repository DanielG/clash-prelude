Name:                 clash-prelude
Version:              0.6
Synopsis:             CAES Language for Synchronous Hardware - Prelude library
Description:
  CλaSH (pronounced ‘clash’) is a functional hardware description language that
  borrows both its syntax and semantics from the functional programming language
  Haskell. The merits of using a functional language to describe hardware comes
  from the fact that combinational circuits can be directly modeled as
  mathematical functions and that functional languages lend themselves very well
  at describing and (de-)composing mathematical functions.
  .
  This package provides:
  .
  * Prelude library containing datatypes and functions for circuit design
  .
  To use the library:
  .
  * Import "CLaSH.Prelude"
  .
  * Additionally import "CLaSH.Prelude.Explicit" if you want to design
    explicitly clocked circuits in a multi-clock setting
  .
  A preliminary version of a tutorial can be found in "CLaSH.Tutorial", for a
  general overview of the library you should however check out "CLaSH.Prelude".
Homepage:             http://christiaanb.github.io/clash2/
bug-reports:          http://github.com/christiaanb/clash-prelude/issues
License:              BSD3
License-file:         LICENSE
Author:               Christiaan Baaij
Maintainer:           Christiaan Baaij <christiaan.baaij@gmail.com>
Copyright:            Copyright © 2013-2014 University of Twente
Category:             Hardware
Build-type:           Simple

Extra-source-files:   README.md
                      CHANGELOG.md

extra-doc-files:      doc/*.svg

Cabal-version:        >=1.10

source-repository head
  type: git
  location: https://github.com/christiaanb/clash-prelude.git

Library
  HS-Source-Dirs:     src

  default-language:   Haskell2010
  ghc-options:        -Wall -fwarn-tabs

  Exposed-modules:    CLaSH.Class.Bits
                      CLaSH.Class.Num
                      CLaSH.Prelude
                      CLaSH.Prelude.BlockRam
                      CLaSH.Prelude.Explicit
                      CLaSH.Prelude.Stream
                      CLaSH.Promoted.Nat
                      CLaSH.Promoted.Nat.TH
                      CLaSH.Promoted.Nat.Literals
                      CLaSH.Promoted.Ord
                      CLaSH.Signal.Explicit
                      CLaSH.Signal.Implicit
                      CLaSH.Sized.Fixed
                      CLaSH.Sized.Index
                      CLaSH.Sized.Signed
                      CLaSH.Sized.Unsigned
                      CLaSH.Sized.Vector
                      CLaSH.Tutorial

  Other-modules:      CLaSH.Signal.Types
                      CLaSH.Signal.Delayed

  other-extensions:   DataKinds
                      DefaultSignatures
                      DeriveDataTypeable
                      FlexibleContexts
                      GADTs
                      GeneralizedNewtypeDeriving
                      ImplicitParams
                      KindSignatures
                      LambdaCase
                      MagicHash
                      NegativeLiterals
                      ScopedTypeVariables
                      TemplateHaskell
                      TupleSections
                      TypeFamilies
                      TypeOperators
                      UndecidableInstances

  Build-depends:      base                 >= 4.7.0.0 && < 5,
                      data-default         >= 0.5.3,
                      template-haskell     >= 2.9.0.0,
                      th-lift              >= 0.5.6,
                      vector               >= 0.10.11.0 && < 0.11
